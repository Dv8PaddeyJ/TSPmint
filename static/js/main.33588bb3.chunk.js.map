{"version":3,"sources":["assets/images/banner.gif","components/HeroSection.js","components/Navbar.js","App.js","index.js","config/config.js"],"names":["ethers","require","MerkleTree","keccak256","merkleTree","addresses","map","addr","sortPairs","HeroContainer","styled","div","Title","h1","HeroWrapper","Image","img","MintContainer","Button","button","MintWrapper","ButtonWrapper","HeroSection","useState","isConnected","setIsConnected","defaultAccount","setDefaultAccount","mintAmount","setMintAmount","supply","setSupply","setIsMinting","proof","setProof","setProvider","contract","setContract","setSigner","accountChangedHandler","account","updateEthers","tempProvider","providers","Web3Provider","window","ethereum","tempSigner","getSigner","tempContract","Contract","config","address","abi","getProof","getHexProof","mint","a","totalCost","cost","totalGas","gasLimit","console","log","wlMint","value","utils","parseEther","toString","then","tx","wait","catch","err","getSupply","totalSupply","useEffect","src","banner","alt","maxSupply","onClick","tempMintAmount","style","width","maxMint","slice","undefined","chain","chainId","networkVersion","request","method","Navbar","height","alignItems","justifyContent","padding","display","App","minHeight","flexDirection","backgroundColor","ReactDOM","createRoot","document","getElementById","render","StrictMode","module","exports","name","network","openseaLink","symbol"],"mappings":"oRAAe,MAA0B,mC,gDCOnCA,EAASC,EAAQ,KACfC,EAAeD,EAAQ,KAAvBC,WACFC,EAAYF,EAAQ,KAGpBG,EAAa,IAAIF,EADLG,EAAUC,KAAI,SAACC,GAAD,OAAUJ,EAAUI,EAApB,IACaJ,EAAW,CAAEK,WAAW,IAE/DC,EAAgBC,IAAOC,IAAV,+JASbC,EAAQF,IAAOG,GAAV,mDAILC,EAAcJ,IAAOC,IAAV,iLAUXI,EAAQL,IAAOM,IAAV,4HAQLC,EAAgBP,IAAOC,IAAV,oQAcbO,EAASR,IAAOS,OAAV,8HAONC,EAAcV,IAAOC,IAAV,4JASXU,EAAgBX,IAAOC,IAAV,sIAmLJW,EA3KK,WAElB,MAAsCC,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAEA,EAA4CF,mBAAS,MAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KAEA,EAAoCJ,mBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAEA,EAA4BN,mBAAS,GAArC,mBAAOO,EAAP,KAAeC,EAAf,KAEA,EAAkCR,oBAAS,GAA3C,mBAAkBS,GAAlB,WAEA,EAA0BT,mBAAS,MAAnC,mBAAOU,EAAP,KAAcC,EAAd,KAGA,EAAgCX,mBAAS,MAAzC,mBAAiBY,GAAjB,WAEA,EAAgCZ,mBAAS,MAAzC,mBAAOa,EAAP,KAAiBC,EAAjB,KAEA,EAA4Bd,mBAAS,MAArC,mBAAee,GAAf,WAmBMC,EAAwB,SAACC,GAC7Bb,EAAkBa,GAClBC,GACD,EAEKA,EAAe,WACnB,IAAIC,EAAe,IAAI1C,EAAO2C,UAAUC,aAAaC,OAAOC,UAC5DX,EAAYO,GAEZ,IAAIK,EAAaL,EAAaM,YAC9BV,EAAUS,GAEV,IAAIE,EAAe,IAAIjD,EAAOkD,SAASC,IAAOC,QAASC,EAAKN,GAC5DV,EAAYY,EACb,EAEKK,GAAW,WACf,IAAMrB,EAAQ7B,EAAWmD,YAAYpD,EAAUuB,IAC/CQ,EAASD,EACV,EAEKuB,GAAI,uCAAG,8BAAAC,EAAA,6DACPC,EAAY9B,EAAauB,IAAOQ,KAChCC,EAAWhC,EAAauB,IAAOU,SAFxB,SAGLP,KAHK,UAIXQ,QAAQC,IAAI9B,IACRA,EALO,uBAMTD,GAAa,GANJ,SAOHI,EACH4B,OAAOpC,EAAYK,EAAO,CACzB4B,SAAUD,EACVK,MAAOjE,EAAOkE,MAAMC,WAAWT,EAAUU,cAE1CC,MAAK,SAACC,GACLA,EAAGC,OAAOF,MAAK,WACbrC,GAAa,EACd,GACF,IACAwC,OAAM,SAACC,GACNX,QAAQC,IAAIU,GACZzC,GAAa,EACd,IApBM,2CAAH,qDAwCJ0C,GAAS,uCAAG,4BAAAjB,EAAA,sEACGrB,EAASuC,cADZ,OACZ7C,EADY,OAEhBgC,QAAQC,IAAIjC,GACZC,EAAUD,EAAOsC,YAHD,2CAAH,qDAUf,OAJAQ,qBAAU,WACRnC,GACD,GAAE,IAGD,eAAChC,EAAD,WACE,cAACG,EAAD,6BACA,eAACE,EAAD,WACE,cAACC,EAAD,CAAO8D,IAAKC,EAAQC,IAAI,WACxB,cAAC9D,EAAD,UACE,cAACG,EAAD,UACII,EAMA,qCACE,6BACE,8BACGM,EADH,MACcqB,IAAO6B,eAGvB,uCAAUpD,EAAV,cACA,eAACP,EAAD,WACE,cAACH,EAAD,CACE+D,QAxCS,WACzB,IAAIC,EAAiBtD,EAAa,EAC9BsD,EAAiB,IACnBA,EAAiB,GAEnBrD,EAAcqD,EACf,EAmCiBC,MAAO,CACLC,MAAO,SAHX,eAQA,cAAClE,EAAD,CACE+D,QAASzB,GACT2B,MAAO,CACLC,MAAO,SAHX,kBAQA,cAAClE,EAAD,CACE+D,QAhES,WACzB,IAAIC,EAAiBtD,EAAa,EAC9BsD,EAAiB/B,IAAOkC,UAC1BH,EAAiB/B,IAAOkC,SAE1BxD,EAAcqD,EACf,EA2DiBC,MAAO,CACLC,MAAO,SAHX,kBASF,yCAAYxD,EAAauB,IAAOQ,QAChC,8CACgB,IACbjC,EAAe4D,MAAM,EAAG,GACvB,MACA5D,EAAe4D,OAAO,SA3C5B,qCACE,0DACA,cAACpE,EAAD,CAAQ+D,QAlGN,WACd,QAAwBM,IAApB1C,OAAOC,SAAwB,CACjC,IAAI0C,EAAQrC,IAAOsC,QAAQrB,WACvBvB,OAAOC,SAAS4C,iBAAmBF,GACrC3C,OAAOC,SACJ6C,QAAQ,CAAEC,OAAQ,wBAClBvB,MAAK,SAAC7B,GACLf,GAAe,GACfc,EAAsBC,EAAQ,IAC9BkC,IACD,GAEN,MACCjD,GAAe,EAElB,EAmFa,wCAkDf,ECzOcoE,EAjBA,WACb,OACE,qBACEV,MAAO,CACLC,MAAO,OACPU,OAAQ,QACRC,WAAY,SACZC,eAAgB,gBAChBC,QAAS,WACTC,QAAS,QAPb,SAUE,8FAGL,ECIcC,MAjBf,WACE,OACE,sBACEhB,MAAO,CACLiB,UAAW,QACXF,QAAS,OACTG,cAAe,SACfjB,MAAO,OACPkB,gBAAiB,WANrB,UASE,cAAC,EAAD,IACA,cAAC,EAAD,MAGL,ECfYC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,M,mBCPJC,EAAOC,QAAU,CACbC,KAAM,kCACN3D,QAAS,6CACTiC,QAAS,EACTI,QAAS,GACTuB,QAAS,eACTC,YAAa,sBACbtD,KAAM,EACNE,SAAU,IACVmB,UAAW,KACXkC,OAAQ,O","file":"static/js/main.33588bb3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/banner.b6a07521.gif\";","import React, { useState, useEffect } from \"react\";\nimport banner from \"../assets/images/banner.gif\";\nimport styled from \"styled-components\";\nimport config from \"../config/config\";\nimport abi from \"../assets/abi/abi.json\";\nimport addresses from \"../addresses/addresses.json\";\n\nconst ethers = require(\"ethers\");\nconst { MerkleTree } = require(\"merkletreejs\");\nconst keccak256 = require(\"keccak256\");\n\nconst leafNodes = addresses.map((addr) => keccak256(addr));\nconst merkleTree = new MerkleTree(leafNodes, keccak256, { sortPairs: true });\n\nconst HeroContainer = styled.div`\n  width: 100%;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Title = styled.h1`\n  text-align: center;\n`;\n\nconst HeroWrapper = styled.div`\n  margin-top: 20px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nconst Image = styled.img`\n  width: 500px;\n  border-radius: 20px;\n  @media (max-width: 530px) {\n    width: 300px;\n  }\n`;\n\nconst MintContainer = styled.div`\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n  width: 500px;\n  height: 310px;\n  border-radius: 20px;\n  border: 5px solid black;\n  @media (max-width: 530px) {\n    width: 300px;\n    height: 310px;\n  }\n`;\n\nconst Button = styled.button`\n  background: transparent;\n  border-radius: 20px;\n  border: 3px solid black;\n  padding: 10px;\n`;\n\nconst MintWrapper = styled.div`\n  gap: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  height: 100%;\n`;\n\nconst ButtonWrapper = styled.div`\n  gap: 10px;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  width: 100%;\n`;\n\nconst HeroSection = () => {\n  // usestate isConnected bool\n  const [isConnected, setIsConnected] = useState(false);\n  // usestate defaultAccount null\n  const [defaultAccount, setDefaultAccount] = useState(null);\n  // usestate mintAmount 1\n  const [mintAmount, setMintAmount] = useState(1);\n  // usestate supply 0\n  const [supply, setSupply] = useState(0);\n  // usestate isMinting false\n  const [isMinting, setIsMinting] = useState(false);\n  // usestate proof null\n  const [proof, setProof] = useState(null);\n\n  // usestate provider null\n  const [provider, setProvider] = useState(null);\n  // usestate contract null\n  const [contract, setContract] = useState(null);\n  // usestate signer null\n  const [signer, setSigner] = useState(null);\n\n  const connect = () => {\n    if (window.ethereum !== undefined) {\n      let chain = config.chainId.toString();\n      if (window.ethereum.networkVersion === chain) {\n        window.ethereum\n          .request({ method: \"eth_requestAccounts\" })\n          .then((account) => {\n            setIsConnected(true);\n            accountChangedHandler(account[0]);\n            getSupply();\n          });\n      }\n    } else {\n      setIsConnected(false);\n    }\n  };\n\n  const accountChangedHandler = (account) => {\n    setDefaultAccount(account);\n    updateEthers();\n  };\n\n  const updateEthers = () => {\n    let tempProvider = new ethers.providers.Web3Provider(window.ethereum);\n    setProvider(tempProvider);\n\n    let tempSigner = tempProvider.getSigner();\n    setSigner(tempSigner);\n\n    let tempContract = new ethers.Contract(config.address, abi, tempSigner);\n    setContract(tempContract);\n  };\n\n  const getProof = () => {\n    const proof = merkleTree.getHexProof(keccak256(defaultAccount));\n    setProof(proof);\n  };\n\n  const mint = async () => {\n    let totalCost = mintAmount * config.cost;\n    let totalGas = mintAmount * config.gasLimit;\n    await getProof();\n    console.log(proof);\n    if (proof) {\n      setIsMinting(true);\n      await contract\n        .wlMint(mintAmount, proof, {\n          gasLimit: totalGas,\n          value: ethers.utils.parseEther(totalCost.toString()),\n        })\n        .then((tx) => {\n          tx.wait().then(() => {\n            setIsMinting(false);\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n          setIsMinting(false);\n        });\n    }\n  };\n\n  const increaseMintAmount = () => {\n    let tempMintAmount = mintAmount + 1;\n    if (tempMintAmount > config.maxMint) {\n      tempMintAmount = config.maxMint;\n    }\n    setMintAmount(tempMintAmount);\n  };\n\n  const decreaseMintAmount = () => {\n    let tempMintAmount = mintAmount - 1;\n    if (tempMintAmount < 1) {\n      tempMintAmount = 1;\n    }\n    setMintAmount(tempMintAmount);\n  };\n\n  const getSupply = async () => {\n    let supply = await contract.totalSupply();\n    console.log(supply);\n    setSupply(supply.toString());\n  };\n\n  useEffect(() => {\n    updateEthers();\n  }, []);\n\n  return (\n    <HeroContainer>\n      <Title>Whitelist mint</Title>\n      <HeroWrapper>\n        <Image src={banner} alt=\"banner\" />\n        <MintContainer>\n          <MintWrapper>\n            {!isConnected ? (\n              <>\n                <h1>Price: 1300 Songbird SGB</h1>\n                <Button onClick={connect}>Connect Wallet</Button>\n              </>\n            ) : (\n              <>\n                <h1>\n                  <b>\n                    {supply} / {config.maxSupply}\n                  </b>\n                </h1>\n                <h2>Mint {mintAmount} TSP NFT</h2>\n                <ButtonWrapper>\n                  <Button\n                    onClick={decreaseMintAmount}\n                    style={{\n                      width: \"100px\",\n                    }}\n                  >\n                    -\n                  </Button>\n                  <Button\n                    onClick={mint}\n                    style={{\n                      width: \"100px\",\n                    }}\n                  >\n                    Mint\n                  </Button>\n                  <Button\n                    onClick={increaseMintAmount}\n                    style={{\n                      width: \"100px\",\n                    }}\n                  >\n                    +\n                  </Button>\n                </ButtonWrapper>\n                <h2>Cost : {mintAmount * config.cost}</h2>\n                <p>\n                  Connected to:{\" \"}\n                  {defaultAccount.slice(0, 6) +\n                    \"...\" +\n                    defaultAccount.slice(-4)}\n                </p>\n              </>\n            )}\n          </MintWrapper>\n        </MintContainer>\n      </HeroWrapper>\n    </HeroContainer>\n  );\n};\n\nexport default HeroSection;\n","import React from \"react\";\n\nconst Navbar = () => {\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"100px\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        padding: \"0px 20px\",\n        display: \"flex\",\n      }}\n    >\n      <h1> The Songbird Pride First NFT Collection - Proud and Strong</h1>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import \"./App.css\";\nimport HeroSection from \"./components/HeroSection\";\nimport Navbar from \"./components/Navbar\";\n\nfunction App() {\n  return (\n    <div\n      style={{\n        minHeight: \"100vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"100%\",\n        backgroundColor: \"#d29503\",\n      }}\n    >\n      <Navbar />\n      <HeroSection />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n","module.exports = {\n    name: \"TheSongbirdPride_1st_collection\",\n    address: \"0x0058da725eE85A388381573D0708d11143795845\",\n    maxMint: 5,\n    chainId: 16,\n    network: \"Flare Coston\",\n    openseaLink: \"https://opensea.io/\",\n    cost: 1,\n    gasLimit: 200000,\n    maxSupply: 2500,\n    symbol: \"CFLR\",\n};\n"],"sourceRoot":""}